# Public (client + server). Safe to expose to the browser.
NEXT_PUBLIC_LOCK_ADDRESS=0xYourLockAddress
NEXT_PUBLIC_UNLOCK_ADDRESS=0xUnlockProxyAddress
NEXT_PUBLIC_BASE_NETWORK_ID=8453
NEXT_PUBLIC_BASE_RPC_URL=https://base-mainnet.g.alchemy.com/v2/YOUR_BROWSER_KEY
NEXT_PUBLIC_BASE_BLOCK_EXPLORER_URL=https://basescan.org
NEXT_PUBLIC_LOCKSMITH_BASE=https://locksmith.unlock-protocol.com
NEXT_PUBLIC_UNLOCK_SUBGRAPH_URL=
NEXT_PUBLIC_USDC_ADDRESS=0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913

# Server-only (never prefix with NEXT_PUBLIC_). Do not commit real secrets.
REGION_AWS=us-east-1
CLOUDFRONT_DOMAIN=assets.example.com
KEY_PAIR_ID=APKAEXAMPLE123456789
UNLOCK_SUBGRAPH_ID=
UNLOCK_SUBGRAPH_API_KEY=
HIDDEN_UNLOCK_CONTRACTS=
CHECKOUT_CONFIGS=
# Example format (semicolon-separated address:json pairs on a single line):
# CHECKOUT_CONFIGS=0x1111111111111111111111111111111111111111:{"locks":{"0x1111111111111111111111111111111111111111":{"network":8453}}};0x2222222222222222222222222222222222222222:{"locks":{"0x2222222222222222222222222222222222222222":{"network":8453}},"title":"Register"}

# For local dev you can paste a test key. In production, inject via secret manager/Amplify env var.
# Use literal newlines as shown below (no \n escapes).
PRIVATE_KEY_SECRET='-----BEGIN RSA PRIVATE KEY-----\nREPLACE_WITH_YOUR_PRIVATE_KEY\n-----END RSA PRIVATE KEY-----'

# NextAuth (email + JWT sessions)
NEXTAUTH_URL=http://localhost:3000
NEXTAUTH_SECRET=replace-with-a-long-random-string
NEXTAUTH_TABLE=NextAuth

# Email provider (AWS SES via SMTP)
# Recommended discrete variables:
EMAIL_SERVER_HOST=email-smtp.us-east-1.amazonaws.com
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER=SMTP_USER
EMAIL_SERVER_PASSWORD=SMTP_PASSWORD
EMAIL_SERVER_SECURE=false
EMAIL_FROM="PGP Community <no-reply@example.com>"

# Or a single SMTP URL (ensure proper URL-encoding of user/pass):
# EMAIL_SERVER=smtp://SMTP_USER:SMTP_PASS@email-smtp.us-east-1.amazonaws.com:587

# Notes:
# - Do NOT commit your real .env.local; this example is sanitized for contributors.
# - Public RPC is fine for the browser (domain-allowlist your key). Server can use the same URL
#   or a separate private RPC endpoint if you later introduce a server-only override in code.
